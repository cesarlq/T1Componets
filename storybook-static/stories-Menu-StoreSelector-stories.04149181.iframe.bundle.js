"use strict";(self.webpackChunk_t1_org_t1components=self.webpackChunk_t1_org_t1components||[]).push([[2213],{"./src/stories/Menu/StoreSelector.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomTexts:()=>CustomTexts,Default:()=>Default,EmptyStores:()=>EmptyStores,ManyStores:()=>ManyStores,WithCreateUrl:()=>WithCreateUrl,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_Components_MenuComponent_StoreSelector__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Components/MenuComponent/StoreSelector.tsx"),console=__webpack_require__("./node_modules/console-browserify/index.js");const mockStores=[{id:1,name:"Tienda Principal"},{id:2,name:"Sucursal Norte"},{id:3,name:"Tienda Online"},{id:4,name:"Sucursal Sur"}],__WEBPACK_DEFAULT_EXPORT__={title:"Menu/Store Selector",component:props=>{const[currentStore,setCurrentStore]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(mockStores[0]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"p-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h1",{className:"text-2xl font-bold mb-4",children:"Store Selector Test"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"mb-4",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{className:"text-sm text-gray-600 mb-2",children:["Tienda actual: ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("strong",{children:currentStore.name})]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Components_MenuComponent_StoreSelector__WEBPACK_IMPORTED_MODULE_2__.L,{...props,stores:mockStores,currentStore,onStoreChange:storeId=>{const store=mockStores.find((s=>s.id===storeId));store&&(setCurrentStore(store),console.log("Store changed to:",store.name))}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mt-8 bg-gray-100 p-4 rounded",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{className:"font-semibold mb-2",children:"Debug Info:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{className:"text-xs",children:JSON.stringify({currentStore,storesCount:mockStores.length},null,2)})]})]})},parameters:{layout:"padded"},tags:["autodocs"]},Default={args:{className:""}},WithCreateUrl={args:{className:"",createStoreUrl:"https://example.com/create-store"}},CustomTexts={args:{className:"",texts:{myStores:"Mis Establecimientos",newStore:"Nuevo Establecimiento",searchPlaceholder:"Buscar establecimiento..."}}},EmptyStores={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"p-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h1",{className:"text-2xl font-bold mb-4",children:"Empty Stores Test"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Components_MenuComponent_StoreSelector__WEBPACK_IMPORTED_MODULE_2__.L,{stores:[],currentStore:void 0,onStoreChange:()=>{},createStoreUrl:""}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"mt-4 text-gray-600",children:"Should render nothing when no stores available."})]})},ManyStores={render:()=>{const manyStores=Array.from({length:20},((_,i)=>({id:i+1,name:`Tienda ${i+1} - Ubicación ${String.fromCharCode(65+i%26)}`}))),[currentStore,setCurrentStore]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(manyStores[0]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"p-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h1",{className:"text-2xl font-bold mb-4",children:"Many Stores Test (Scroll)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Components_MenuComponent_StoreSelector__WEBPACK_IMPORTED_MODULE_2__.L,{stores:manyStores,currentStore,onStoreChange:id=>{const store=manyStores.find((s=>s.id===id));store&&setCurrentStore(store)},createStoreUrl:""})]})}},__namedExportsOrder=["Default","WithCreateUrl","CustomTexts","EmptyStores","ManyStores"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    className: ''\n  }\n}",...Default.parameters?.docs?.source}}},WithCreateUrl.parameters={...WithCreateUrl.parameters,docs:{...WithCreateUrl.parameters?.docs,source:{originalSource:"{\n  args: {\n    className: '',\n    createStoreUrl: 'https://example.com/create-store'\n  }\n}",...WithCreateUrl.parameters?.docs?.source}}},CustomTexts.parameters={...CustomTexts.parameters,docs:{...CustomTexts.parameters?.docs,source:{originalSource:"{\n  args: {\n    className: '',\n    texts: {\n      myStores: 'Mis Establecimientos',\n      newStore: 'Nuevo Establecimiento',\n      searchPlaceholder: 'Buscar establecimiento...'\n    }\n  }\n}",...CustomTexts.parameters?.docs?.source}}},EmptyStores.parameters={...EmptyStores.parameters,docs:{...EmptyStores.parameters?.docs,source:{originalSource:'{\n  render: () => <div className="p-6">\n      <h1 className="text-2xl font-bold mb-4">Empty Stores Test</h1>\n      <StoreSelector stores={[]} currentStore={undefined} onStoreChange={() => {}} createStoreUrl={\'\'} />\n      <p className="mt-4 text-gray-600">Should render nothing when no stores available.</p>\n    </div>\n}',...EmptyStores.parameters?.docs?.source}}},ManyStores.parameters={...ManyStores.parameters,docs:{...ManyStores.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const manyStores = Array.from({\n      length: 20\n    }, (_, i) => ({\n      id: i + 1,\n      name: `Tienda ${i + 1} - Ubicación ${String.fromCharCode(65 + i % 26)}`\n    }));\n    const [currentStore, setCurrentStore] = useState(manyStores[0]);\n    return <div className="p-6">\n        <h1 className="text-2xl font-bold mb-4">Many Stores Test (Scroll)</h1>\n        <StoreSelector stores={manyStores} currentStore={currentStore} onStoreChange={id => {\n        const store = manyStores.find(s => s.id === id);\n        if (store) setCurrentStore(store);\n      }} createStoreUrl={\'\'} />\n      </div>;\n  }\n}',...ManyStores.parameters?.docs?.source}}}}}]);