"use strict";(self.webpackChunk_t1_org_t1components=self.webpackChunk_t1_org_t1components||[]).push([[1765],{"./src/stories/Components/PhoneInputT1.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomStyling:()=>CustomStyling,CustomValidation:()=>CustomValidation,Default:()=>Default,DisabledState:()=>DisabledState,FormattedNumber:()=>FormattedNumber,InFormContext:()=>InFormContext,Interactive:()=>Interactive,VariantsShowcase:()=>VariantsShowcase,WithCountryNames:()=>WithCountryNames,WithCustomCountries:()=>WithCustomCountries,WithEmojiFlags:()=>WithEmojiFlags,WithError:()=>WithError,WithInitialValue:()=>WithInitialValue,__namedExportsOrder:()=>__namedExportsOrder,default:()=>PhoneInputT1_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),Stack=__webpack_require__("./node_modules/@mui/material/esm/Stack/Stack.js"),Box=__webpack_require__("./node_modules/@mui/material/esm/Box/Box.js"),Typography=__webpack_require__("./node_modules/@mui/material/esm/Typography/Typography.js"),Divider=__webpack_require__("./node_modules/@mui/material/esm/Divider/Divider.js"),Paper=__webpack_require__("./node_modules/@mui/material/esm/Paper/Paper.js"),Grid=__webpack_require__("./node_modules/@mui/material/esm/Grid/Grid.js"),InputBase=__webpack_require__("./node_modules/@mui/material/esm/InputBase/InputBase.js"),Select=__webpack_require__("./node_modules/@mui/material/esm/Select/Select.js"),MenuItem=__webpack_require__("./node_modules/@mui/material/esm/MenuItem/MenuItem.js"),InputAdornment=__webpack_require__("./node_modules/@mui/material/esm/InputAdornment/InputAdornment.js"),IconButton=__webpack_require__("./node_modules/@mui/material/esm/IconButton/IconButton.js"),FormHelperText=__webpack_require__("./node_modules/@mui/material/esm/FormHelperText/FormHelperText.js"),KeyboardArrowDown=__webpack_require__("./node_modules/@mui/icons-material/esm/KeyboardArrowDown.js"),Clear=__webpack_require__("./node_modules/@mui/icons-material/esm/Clear.js"),styled=__webpack_require__("./node_modules/@mui/material/esm/styles/styled.js"),theme=__webpack_require__("./src/styles/theme.ts"),_3x2=__webpack_require__("./node_modules/country-flag-icons/react/3x2/index.js");const DEFAULT_COUNTRIES=[{code:"MX",name:"Mexico",prefix:"+52",flagEmoji:"ðŸ‡²ðŸ‡½"},{code:"US",name:"United States",prefix:"+1",flagEmoji:"ðŸ‡ºðŸ‡¸"},{code:"ES",name:"Spain",prefix:"+34",flagEmoji:"ðŸ‡ªðŸ‡¸"},{code:"CA",name:"Canada",prefix:"+1",flagEmoji:"ðŸ‡¨ðŸ‡¦"},{code:"BR",name:"Brazil",prefix:"+55",flagEmoji:"ðŸ‡§ðŸ‡·"},{code:"AR",name:"Argentina",prefix:"+54",flagEmoji:"ðŸ‡¦ðŸ‡·"},{code:"GB",name:"United Kingdom",prefix:"+44",flagEmoji:"ðŸ‡¬ðŸ‡§"},{code:"FR",name:"France",prefix:"+33",flagEmoji:"ðŸ‡«ðŸ‡·"},{code:"DE",name:"Germany",prefix:"+49",flagEmoji:"ðŸ‡©ðŸ‡ª"},{code:"IT",name:"Italy",prefix:"+39",flagEmoji:"ðŸ‡®ðŸ‡¹"},{code:"PT",name:"Portugal",prefix:"+351",flagEmoji:"ðŸ‡µðŸ‡¹"},{code:"JP",name:"Japan",prefix:"+81",flagEmoji:"ðŸ‡¯ðŸ‡µ"},{code:"CN",name:"China",prefix:"+86",flagEmoji:"ðŸ‡¨ðŸ‡³"},{code:"AU",name:"Australia",prefix:"+61",flagEmoji:"ðŸ‡¦ðŸ‡º"},{code:"NZ",name:"New Zealand",prefix:"+64",flagEmoji:"ðŸ‡³ðŸ‡¿"},{code:"IN",name:"India",prefix:"+91",flagEmoji:"ðŸ‡®ðŸ‡³"}],CountryFlag=({code,width="24",height="16"})=>{const FlagComponent=_3x2[code];return FlagComponent?(0,jsx_runtime.jsx)(FlagComponent,{title:code,width,height}):(0,jsx_runtime.jsx)("span",{children:code})},StyledInputBase=(0,styled.Ay)(InputBase.Ay,{shouldForwardProp:prop=>"customBorderColor"!==prop&&"customBorderRadius"!==prop})((({theme,error,customBorderColor,customBorderRadius})=>({flex:1,paddingLeft:theme.spacing(2),paddingRight:"20px",color:error?theme.palette.error.main:"inherit","& .MuiInputBase-input":{border:"none",outline:"none",boxShadow:"none"},"&.Mui-focused":{"& .MuiInputBase-input":{border:"none",boxShadow:"none"}}}))),PhoneInputT1=({initialRegion,initialPhoneNumber="",countries=DEFAULT_COUNTRIES,defaultCountry="MX",onChange,onBlur,onFocus,required=!1,error=!1,helperText,customValidation,autoFocus=!1,disabled=!1,readOnly=!1,label,placeholder="Cellphone number",variant="outlined",size="medium",fullWidth=!1,showCountryName=!1,formatPhoneNumber=!1,clearable=!1,sx,inputSx,selectSx,borderRadius="12px",borderColor="#c4c4c4",focusBorderColor,maxWidth,className,inputClassName,selectClassName,id,name,inputProps,ariaLabel,ariaDescribedby})=>{const containerRef=(0,react.useRef)(null),[selectedCountry,setSelectedCountry]=(0,react.useState)((()=>{if(initialRegion){const country=countries.find((c=>c.prefix===initialRegion));if(country)return country}return countries.find((c=>c.code===defaultCountry))||countries[0]})()),[phoneNumber,setPhoneNumber]=(0,react.useState)(initialPhoneNumber),[isFocused,setIsFocused]=(0,react.useState)(!1);(0,react.useEffect)((()=>{if(initialRegion){const country=countries.find((c=>c.prefix===initialRegion));country&&setSelectedCountry(country)}}),[initialRegion,countries]),(0,react.useEffect)((()=>{setPhoneNumber(initialPhoneNumber)}),[initialPhoneNumber]);const validatePhone=value=>customValidation?customValidation(value):10===value.length,formatNumber=value=>formatPhoneNumber?"MX"===selectedCountry.code&&10===value.length||["US","CA"].includes(selectedCountry.code)&&10===value.length?`(${value.slice(0,3)}) ${value.slice(3,6)}-${value.slice(6,10)}`:value.replace(/(\d{3})(?=\d)/g,"$1-"):value,hasError=error||required&&""===phoneNumber||phoneNumber.length>0&&!validatePhone(phoneNumber),errorMessage=helperText||(phoneNumber.length>0&&phoneNumber.length<10?"Cellphone number must be at least 10 digits":required&&""===phoneNumber?"This field is required":""),activeBorderColor=hasError?"#d32f2f":isFocused?focusBorderColor||theme.A.palette.primary.main:borderColor;return(0,jsx_runtime.jsxs)(Box.A,{sx:{display:"flex",flexDirection:"column",width:fullWidth?"100%":"auto",maxWidth,...sx},className,children:[label&&(0,jsx_runtime.jsxs)(Typography.A,{variant:"body2",component:"label",htmlFor:id||"phone-input",sx:{mb:.5,fontWeight:500},children:[label,required&&(0,jsx_runtime.jsx)(Box.A,{component:"span",sx:{color:"error.main",ml:.5},children:"*"})]}),(0,jsx_runtime.jsxs)(Box.A,{ref:containerRef,sx:{display:"flex",alignItems:"center",border:`1px solid ${activeBorderColor}`,borderRadius,height:"36px",overflow:"hidden",bgcolor:disabled?"action.disabledBackground":"background.paper",opacity:disabled?.7:1,transition:"border-color 0.2s ease-in-out","&:hover":{borderColor:disabled||hasError?void 0:focusBorderColor||theme.A.palette.primary.main}},children:[(0,jsx_runtime.jsx)(Select.A,{value:selectedCountry.code,onChange:event=>{const country=countries.find((c=>c.code===event.target.value));if(country){setSelectedCountry(country);const isValid=validatePhone(phoneNumber);null==onChange||onChange(country.prefix,phoneNumber,isValid,formatNumber(phoneNumber))}},disabled:disabled||readOnly,IconComponent:KeyboardArrowDown.A,className:selectClassName,sx:{minWidth:"auto",height:"small"===size?"40px":"48px","& .MuiOutlinedInput-notchedOutline":{border:"none"},"& .MuiOutlinedInput-input":{paddingRight:"27px!important"},"& .MuiBox-root":{gap:"0px"},"& .MuiSelect-select":{padding:"small"===size?"4px 6px":"6px 8px",display:"flex",alignItems:"center",gap:1},borderRight:`1px solid ${hasError?"#d32f2f":borderColor}`,borderRadius:"0 !important","&.Mui-focused":{"& .MuiOutlinedInput-notchedOutline":{border:"none"}},...selectSx},renderValue:value=>{const country=countries.find((c=>c.code===value));return(0,jsx_runtime.jsxs)(Box.A,{sx:{display:"flex",alignItems:"center",gap:1},children:[(0,jsx_runtime.jsx)(Box.A,{sx:{width:"24px",height:"auto",display:"flex",alignItems:"center"},children:(null==country?void 0:country.flagEmoji)&&"EMOJI"===country.code?(0,jsx_runtime.jsx)(Typography.A,{fontSize:"16px",children:country.flagEmoji}):(0,jsx_runtime.jsx)(CountryFlag,{code:(null==country?void 0:country.code)||""})}),(0,jsx_runtime.jsx)("span",{children:null==country?void 0:country.prefix}),showCountryName&&(0,jsx_runtime.jsx)(Typography.A,{variant:"body2",sx:{maxWidth:"75px",overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},children:null==country?void 0:country.name})]})},children:countries.map((country=>(0,jsx_runtime.jsx)(MenuItem.A,{value:country.code,children:(0,jsx_runtime.jsxs)(Box.A,{sx:{display:"flex",alignItems:"center",gap:1},children:[(0,jsx_runtime.jsx)(Box.A,{sx:{width:"24px",height:"16px",display:"flex",alignItems:"center"},children:country.flagEmoji&&"EMOJI"===country.code?(0,jsx_runtime.jsx)(Typography.A,{fontSize:"16px",children:country.flagEmoji}):(0,jsx_runtime.jsx)(CountryFlag,{code:country.code})}),(0,jsx_runtime.jsx)("span",{children:country.prefix}),(0,jsx_runtime.jsx)(Typography.A,{children:country.name})]})},country.code)))}),(0,jsx_runtime.jsx)(StyledInputBase,{id:id||"phone-input",name,placeholder,value:phoneNumber,onChange:ev=>{const value=ev.target.value.replace(/[^0-9]/g,"").slice(0,10);if(""===value||/^\d{0,10}$/.test(value)){setPhoneNumber(value);const isValid=validatePhone(value);null==onChange||onChange(selectedCountry.prefix,value,isValid,formatNumber(value))}},onFocus:event=>{setIsFocused(!0),null==onFocus||onFocus(event)},onBlur:event=>{setIsFocused(!1),null==onBlur||onBlur(event)},error:hasError,disabled,readOnly,autoFocus,className:inputClassName,customBorderColor:activeBorderColor,customBorderRadius:borderRadius,inputProps:{pattern:"[0-9]*",maxLength:10,inputMode:"numeric","aria-label":ariaLabel||"Phone number input","aria-describedby":ariaDescribedby,style:{boxShadow:"none"},...inputProps},endAdornment:clearable&&phoneNumber&&!disabled&&!readOnly?(0,jsx_runtime.jsx)(InputAdornment.A,{position:"end",children:(0,jsx_runtime.jsx)(IconButton.A,{"aria-label":"clear phone number",onClick:()=>{setPhoneNumber(""),null==onChange||onChange(selectedCountry.prefix,"",!1,"")},edge:"end",size:"small",children:(0,jsx_runtime.jsx)(Clear.A,{fontSize:"small"})})}):null,sx:{"& .MuiInputBase-root":{boxShadow:"none"},"&.Mui-focused":{outline:"none",boxShadow:"none"},"& .MuiOutlinedInput-notchedOutline":{border:"none"},...inputSx}})]}),hasError&&errorMessage&&(0,jsx_runtime.jsx)(FormHelperText.A,{error:hasError,sx:{mx:1.5,mt:.5,fontSize:"0.75rem"},children:errorMessage})]})},Components_PhoneInputT1=PhoneInputT1;try{PhoneInputT1.displayName="PhoneInputT1",PhoneInputT1.__docgenInfo={description:"",displayName:"PhoneInputT1",props:{initialRegion:{defaultValue:null,description:"",name:"initialRegion",required:!1,type:{name:"string | undefined"}},initialPhoneNumber:{defaultValue:{value:""},description:"",name:"initialPhoneNumber",required:!1,type:{name:"string | undefined"}},countries:{defaultValue:{value:"[\n  { code: 'MX', name: 'Mexico', prefix: '+52', flagEmoji: 'ðŸ‡²ðŸ‡½' },\n  { code: 'US', name: 'United States', prefix: '+1', flagEmoji: 'ðŸ‡ºðŸ‡¸' },\n  { code: 'ES', name: 'Spain', prefix: '+34', flagEmoji: 'ðŸ‡ªðŸ‡¸' },\n  { code: 'CA', name: 'Canada', prefix: '+1', flagEmoji: 'ðŸ‡¨ðŸ‡¦' },\n  { code: 'BR', name: 'Brazil', prefix: '+55', flagEmoji: 'ðŸ‡§ðŸ‡·' },\n  { code: 'AR', name: 'Argentina', prefix: '+54', flagEmoji: 'ðŸ‡¦ðŸ‡·' },\n  { code: 'GB', name: 'United Kingdom', prefix: '+44', flagEmoji: 'ðŸ‡¬ðŸ‡§' },\n  { code: 'FR', name: 'France', prefix: '+33', flagEmoji: 'ðŸ‡«ðŸ‡·' },\n  { code: 'DE', name: 'Germany', prefix: '+49', flagEmoji: 'ðŸ‡©ðŸ‡ª' },\n  { code: 'IT', name: 'Italy', prefix: '+39', flagEmoji: 'ðŸ‡®ðŸ‡¹' },\n  { code: 'PT', name: 'Portugal', prefix: '+351', flagEmoji: 'ðŸ‡µðŸ‡¹' },\n  { code: 'JP', name: 'Japan', prefix: '+81', flagEmoji: 'ðŸ‡¯ðŸ‡µ' },\n  { code: 'CN', name: 'China', prefix: '+86', flagEmoji: 'ðŸ‡¨ðŸ‡³' },\n  { code: 'AU', name: 'Australia', prefix: '+61', flagEmoji: 'ðŸ‡¦ðŸ‡º' },\n  { code: 'NZ', name: 'New Zealand', prefix: '+64', flagEmoji: 'ðŸ‡³ðŸ‡¿' },\n  { code: 'IN', name: 'India', prefix: '+91', flagEmoji: 'ðŸ‡®ðŸ‡³' }\n]"},description:"",name:"countries",required:!1,type:{name:"Country[] | undefined"}},defaultCountry:{defaultValue:{value:"MX"},description:"",name:"defaultCountry",required:!1,type:{name:"string | undefined"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((prefix: string, phoneNumber: string, isValid: boolean, formattedNumber?: string | undefined) => void) | undefined"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>) => void) | undefined"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((event: FocusEvent<HTMLInputElement, Element>) => void) | undefined"}},required:{defaultValue:{value:"false"},description:"",name:"required",required:!1,type:{name:"boolean | undefined"}},error:{defaultValue:{value:"false"},description:"",name:"error",required:!1,type:{name:"boolean | undefined"}},helperText:{defaultValue:null,description:"",name:"helperText",required:!1,type:{name:"string | undefined"}},customValidation:{defaultValue:null,description:"",name:"customValidation",required:!1,type:{name:"((phoneNumber: string) => boolean) | undefined"}},autoFocus:{defaultValue:{value:"false"},description:"",name:"autoFocus",required:!1,type:{name:"boolean | undefined"}},disabled:{defaultValue:{value:"false"},description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},readOnly:{defaultValue:{value:"false"},description:"",name:"readOnly",required:!1,type:{name:"boolean | undefined"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"ReactNode"}},placeholder:{defaultValue:{value:"Cellphone number"},description:"",name:"placeholder",required:!1,type:{name:"string | undefined"}},variant:{defaultValue:{value:"outlined"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"outlined"'},{value:'"filled"'},{value:'"standard"'}]}},size:{defaultValue:{value:"medium"},description:"",name:"size",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"small"'},{value:'"medium"'}]}},fullWidth:{defaultValue:{value:"false"},description:"",name:"fullWidth",required:!1,type:{name:"boolean | undefined"}},showCountryName:{defaultValue:{value:"false"},description:"",name:"showCountryName",required:!1,type:{name:"boolean | undefined"}},formatPhoneNumber:{defaultValue:{value:"false"},description:"",name:"formatPhoneNumber",required:!1,type:{name:"boolean | undefined"}},clearable:{defaultValue:{value:"false"},description:"",name:"clearable",required:!1,type:{name:"boolean | undefined"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme> | undefined"}},inputSx:{defaultValue:null,description:"",name:"inputSx",required:!1,type:{name:"SxProps<Theme> | undefined"}},selectSx:{defaultValue:null,description:"",name:"selectSx",required:!1,type:{name:"SxProps<Theme> | undefined"}},borderRadius:{defaultValue:{value:"12px"},description:"",name:"borderRadius",required:!1,type:{name:"string | number | undefined"}},borderColor:{defaultValue:{value:"#c4c4c4"},description:"",name:"borderColor",required:!1,type:{name:"string | undefined"}},focusBorderColor:{defaultValue:null,description:"",name:"focusBorderColor",required:!1,type:{name:"string | undefined"}},maxWidth:{defaultValue:null,description:"",name:"maxWidth",required:!1,type:{name:"string | number | undefined"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | undefined"}},inputClassName:{defaultValue:null,description:"",name:"inputClassName",required:!1,type:{name:"string | undefined"}},selectClassName:{defaultValue:null,description:"",name:"selectClassName",required:!1,type:{name:"string | undefined"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string | undefined"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string | undefined"}},inputProps:{defaultValue:null,description:"",name:"inputProps",required:!1,type:{name:"InputHTMLAttributes<HTMLInputElement> | undefined"}},ariaLabel:{defaultValue:null,description:"",name:"ariaLabel",required:!1,type:{name:"string | undefined"}},ariaDescribedby:{defaultValue:null,description:"",name:"ariaDescribedby",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Components/PhoneInputT1.tsx#PhoneInputT1"]={docgenInfo:PhoneInputT1.__docgenInfo,name:"PhoneInputT1",path:"src/Components/PhoneInputT1.tsx#PhoneInputT1"})}catch(__react_docgen_typescript_loader_error){}const PhoneInputT1_stories={title:"Components/PhoneInputT1",component:Components_PhoneInputT1,parameters:{layout:"centered",docs:{description:{component:"\n          An advanced phone number input component with integrated country selection and extensive customization options.\n          \n          ## When to use\n          - For international phone number collection\n          - In forms requiring phone number validation\n          - When you need consistent but customizable phone inputs\n          - For applications supporting multiple countries\n          - When you need formatted phone number display\n        "}}},argTypes:{initialRegion:{control:"select",options:["+52","+1","+34","+44","+49","+81","+61"],description:"Initial country code (prefix)"},initialPhoneNumber:{control:"text",description:"Initial phone number value"},defaultCountry:{control:"select",options:["MX","US","ES","GB","DE","FR","JP","AU"],description:"Default country code if initialRegion is not provided"},required:{control:"boolean",description:"Whether the field is required"},error:{control:"boolean",description:"Whether to display the component in an error state"},helperText:{control:"text",description:"Helper text to display, usually for error messages"},autoFocus:{control:"boolean",description:"Whether the input should be focused on mount"},disabled:{control:"boolean",description:"Whether the input is disabled"},readOnly:{control:"boolean",description:"Whether the input is read-only"},label:{control:"text",description:"Label for the input field"},placeholder:{control:"text",description:"Placeholder text for the phone input"},variant:{control:"select",options:["outlined","filled","standard"],description:"Input variant style"},size:{control:"select",options:["small","medium"],description:"Input size"},fullWidth:{control:"boolean",description:"Whether the input should take up the full width of its container"},showCountryName:{control:"boolean",description:"Whether to show the country name alongside the flag and prefix"},formatPhoneNumber:{control:"boolean",description:"Whether to format the phone number according to country standards"},clearable:{control:"boolean",description:"Whether to show a clear button when the input has a value"},borderRadius:{control:"text",description:"Border radius of the input"},borderColor:{control:"color",description:"Border color of the input"},focusBorderColor:{control:"color",description:"Border color when the input is focused"},onChange:{action:"changed",description:"Callback when the phone number or country changes"},onBlur:{action:"blurred",description:"Callback when the input loses focus"},onFocus:{action:"focused",description:"Callback when the input gains focus"},countries:{description:"Array of countries to display in the dropdown"},customValidation:{description:"Custom validation function for the phone number"}},tags:["autodocs"]},Default={args:{initialRegion:"+52",initialPhoneNumber:"",placeholder:"Cellphone number",error:!1},parameters:{docs:{description:{story:"The default phone input with Mexico (+52) selected as the initial country."}}}},WithInitialValue={args:{initialRegion:"+1",initialPhoneNumber:"8005551234",placeholder:"Phone number"},parameters:{docs:{description:{story:"Phone input initialized with a US number. Shows how the component handles pre-filled values."}}}},WithError={args:{initialRegion:"+34",initialPhoneNumber:"123456",placeholder:"Phone number",error:!0,helperText:"Invalid phone number format"},parameters:{docs:{description:{story:"Shows the phone input in an error state with custom error message."}}}},WithCustomCountries={args:{initialRegion:"+44",placeholder:"Phone number",countries:[{code:"GB",name:"United Kingdom",prefix:"+44"},{code:"FR",name:"France",prefix:"+33"},{code:"DE",name:"Germany",prefix:"+49"},{code:"IT",name:"Italy",prefix:"+39"},{code:"ES",name:"Spain",prefix:"+34"}]},parameters:{docs:{description:{story:"Phone input with a custom list of European countries only."}}}},WithEmojiFlags={args:{initialRegion:"+52",placeholder:"Phone number",countries:[{code:"MX",name:"Mexico",prefix:"+52",flagEmoji:"ðŸ‡²ðŸ‡½"},{code:"US",name:"United States",prefix:"+1",flagEmoji:"ðŸ‡ºðŸ‡¸"},{code:"ES",name:"Spain",prefix:"+34",flagEmoji:"ðŸ‡ªðŸ‡¸"},{code:"CA",name:"Canada",prefix:"+1",flagEmoji:"ðŸ‡¨ðŸ‡¦"},{code:"BR",name:"Brazil",prefix:"+55",flagEmoji:"ðŸ‡§ðŸ‡·"}]},parameters:{docs:{description:{story:"Phone input using emoji flags instead of the flag image library."}}}},CustomStyling={args:{initialRegion:"+52",placeholder:"Enter your number",label:"Phone Number",borderRadius:"8px",borderColor:"#9c27b0",focusBorderColor:"#2196f3",size:"small",required:!0,clearable:!0},parameters:{docs:{description:{story:"Demonstrates custom styling options including border colors, radius, and size."}}}},FormattedNumber={args:{initialRegion:"+1",placeholder:"Phone will be formatted",formatPhoneNumber:!0,label:"US Phone Format"},parameters:{docs:{description:{story:"Phone input that formats numbers according to country standards (e.g., (XXX) XXX-XXXX for US)."}}}},WithCountryNames={args:{initialRegion:"+49",placeholder:"Phone number",showCountryName:!0},parameters:{docs:{description:{story:"Displays country names alongside flags and prefixes in the dropdown and selected value."}}}},DisabledState={args:{initialRegion:"+44",initialPhoneNumber:"2074567890",disabled:!0,label:"Contact Phone (Disabled)"},parameters:{docs:{description:{story:"Shows how the component appears when disabled, with a pre-filled value."}}}},Interactive={render:()=>{const[phoneData,setPhoneData]=(0,react.useState)({prefix:"+52",number:"",isValid:!0,formatted:""});return(0,jsx_runtime.jsxs)(Stack.A,{spacing:3,sx:{width:"400px",p:2},children:[(0,jsx_runtime.jsx)(Components_PhoneInputT1,{initialRegion:phoneData.prefix,initialPhoneNumber:phoneData.number,onChange:(prefix,number,isValid,formatted)=>{setPhoneData({prefix,number,isValid,formatted:formatted||number})},error:phoneData.number.length>0&&!phoneData.isValid,helperText:"Phone number must be 10 digits",label:"Phone Number",required:!0,formatPhoneNumber:!0,clearable:!0}),(0,jsx_runtime.jsxs)(Box.A,{sx:{mt:2,p:2,border:"1px solid #eee",borderRadius:"8px"},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"Current Value"}),(0,jsx_runtime.jsxs)(Typography.A,{variant:"body2",children:["Country code: ",(0,jsx_runtime.jsx)("strong",{children:phoneData.prefix})]}),(0,jsx_runtime.jsxs)(Typography.A,{variant:"body2",children:["Phone number: ",(0,jsx_runtime.jsx)("strong",{children:phoneData.number})]}),(0,jsx_runtime.jsxs)(Typography.A,{variant:"body2",children:["Formatted number: ",(0,jsx_runtime.jsx)("strong",{children:phoneData.formatted})]}),(0,jsx_runtime.jsxs)(Typography.A,{variant:"body2",children:["Complete number: ",(0,jsx_runtime.jsx)("strong",{children:phoneData.prefix+phoneData.number})]}),(0,jsx_runtime.jsxs)(Typography.A,{variant:"body2",sx:{color:phoneData.isValid?"success.main":"error.main"},children:["Status: ",(0,jsx_runtime.jsx)("strong",{children:phoneData.isValid?"Valid":"Invalid"})]})]})]})},parameters:{docs:{description:{story:"A fully interactive example with real-time validation, formatting, and tracking of the complete phone number."}}}},CustomValidation={render:()=>{const[phoneData,setPhoneData]=(0,react.useState)({prefix:"+1",number:"",isValid:!0}),validateUSNumber=number=>{if("+1"!==phoneData.prefix)return 10===number.length;if(10!==number.length)return!1;const areaCode=number.substring(0,3);return"0"!==areaCode.charAt(0)&&"1"!==areaCode.charAt(0)};return(0,jsx_runtime.jsxs)(Stack.A,{spacing:3,sx:{width:"400px",p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle1",gutterBottom:!0,children:"US Number Validation Rules:"}),(0,jsx_runtime.jsx)(Typography.A,{variant:"body2",children:"â€¢ Must be 10 digits long"}),(0,jsx_runtime.jsx)(Typography.A,{variant:"body2",children:"â€¢ Area code cannot start with 0 or 1"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{initialRegion:"+1",onChange:(prefix,number,isValid)=>{setPhoneData({prefix,number,isValid:validateUSNumber(number)})},error:phoneData.number.length>0&&!phoneData.isValid,helperText:"Invalid US number (area code can't start with 0 or 1)",label:"US Phone Number",customValidation:validateUSNumber,countries:[{code:"US",name:"United States",prefix:"+1"},{code:"CA",name:"Canada",prefix:"+1"}]}),(0,jsx_runtime.jsxs)(Box.A,{sx:{mt:2,p:2,border:"1px solid #eee",borderRadius:"8px"},children:[(0,jsx_runtime.jsxs)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:["Validation status:",(0,jsx_runtime.jsx)(Box.A,{component:"span",sx:{ml:1,px:1.5,py:.5,borderRadius:"4px",bgcolor:phoneData.isValid?"success.light":"error.light",color:phoneData.isValid?"success.dark":"error.dark",fontSize:"0.75rem",fontWeight:"bold"},children:phoneData.isValid?"VALID":"INVALID"})]}),(0,jsx_runtime.jsxs)(Typography.A,{variant:"body2",mt:1,children:["Current number: ",(0,jsx_runtime.jsxs)("strong",{children:[phoneData.prefix," ",phoneData.number]})]})]})]})},parameters:{docs:{description:{story:"Demonstrates how to implement custom validation rules for phone numbers."}}}},InFormContext={render:()=>(0,jsx_runtime.jsxs)(Box.A,{component:"form",sx:{width:"650px",p:3,border:"1px solid #e0e0e0",borderRadius:"8px",backgroundColor:"#f9f9f9"},onSubmit:e=>{e.preventDefault(),alert("Form submitted!")},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"h5",gutterBottom:!0,children:"Contact Information Form"}),(0,jsx_runtime.jsx)(Divider.A,{sx:{mb:3}}),(0,jsx_runtime.jsxs)(Grid.A,{container:!0,spacing:3,children:[(0,jsx_runtime.jsxs)(Grid.A,{children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"body2",gutterBottom:!0,children:"Name"}),(0,jsx_runtime.jsx)(Box.A,{component:"input",sx:{width:"100%",p:1.5,border:"1px solid #c4c4c4",borderRadius:"15px",fontSize:"16px"},placeholder:"Enter your name"})]}),(0,jsx_runtime.jsxs)(Grid.A,{children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"body2",gutterBottom:!0,children:"Email"}),(0,jsx_runtime.jsx)(Box.A,{component:"input",type:"email",sx:{width:"100%",p:1.5,border:"1px solid #c4c4c4",borderRadius:"15px",fontSize:"16px"},placeholder:"Enter your email"})]}),(0,jsx_runtime.jsxs)(Grid.A,{children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"body2",gutterBottom:!0,children:"Mobile Phone (Required)"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{initialRegion:"+52",placeholder:"Mobile phone number",required:!0,clearable:!0,formatPhoneNumber:!0})]}),(0,jsx_runtime.jsxs)(Grid.A,{children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"body2",gutterBottom:!0,children:"Work Phone (Optional)"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{initialRegion:"+1",placeholder:"Work phone number (optional)",showCountryName:!0,borderRadius:"8px"})]}),(0,jsx_runtime.jsxs)(Grid.A,{children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"body2",gutterBottom:!0,children:"Address"}),(0,jsx_runtime.jsx)(Box.A,{component:"textarea",sx:{width:"100%",p:1.5,border:"1px solid #c4c4c4",borderRadius:"15px",fontSize:"16px",fontFamily:"inherit",resize:"vertical",minHeight:"80px"},placeholder:"Enter your address"})]}),(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Box.A,{sx:{display:"flex",justifyContent:"flex-end",mt:2},children:[(0,jsx_runtime.jsx)(Box.A,{component:"button",type:"button",sx:{bgcolor:"transparent",color:"#555",py:1.5,px:4,border:"1px solid #ccc",borderRadius:"8px",fontSize:"16px",cursor:"pointer",mr:2},children:"Cancel"}),(0,jsx_runtime.jsx)(Box.A,{component:"button",type:"submit",sx:{bgcolor:"#E84142",color:"white",py:1.5,px:4,border:"none",borderRadius:"8px",fontSize:"16px",cursor:"pointer","&:hover":{bgcolor:"#d33a3b"}},children:"Submit"})]})})]})]}),parameters:{docs:{description:{story:"Demonstrates how different configurations of the phone input can be used within a form context."}}}},VariantsShowcase={render:()=>(0,jsx_runtime.jsxs)(Box.A,{sx:{p:3,width:"800px"},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"h5",gutterBottom:!0,children:"PhoneInputT1 Variants"}),(0,jsx_runtime.jsx)(Typography.A,{variant:"body2",paragraph:!0,children:"A showcase of different configuration options for the PhoneInputT1 component."}),(0,jsx_runtime.jsxs)(Grid.A,{container:!0,spacing:3,children:[(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"Standard"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{placeholder:"Standard input"})]})}),(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"With Label"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{label:"Phone Number",placeholder:"With label"})]})}),(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"Small Size"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{size:"small",placeholder:"Small size input"})]})}),(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"Required Field"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{label:"Required Phone",required:!0,placeholder:"Required field"})]})}),(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"Custom Border Radius"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{borderRadius:"4px",placeholder:"Square corners"})]})}),(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"Custom Colors"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{borderColor:"#9c27b0",focusBorderColor:"#2196f3",placeholder:"Custom colors"})]})}),(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"With Country Names"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{showCountryName:!0,placeholder:"Shows country names"})]})}),(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"Clearable Input"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{clearable:!0,initialPhoneNumber:"5551234567",placeholder:"Clearable input"})]})}),(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"Error State"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{error:!0,helperText:"Invalid phone number",placeholder:"Error state"})]})}),(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"Disabled State"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{disabled:!0,initialPhoneNumber:"5551234567",placeholder:"Disabled input"})]})}),(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"Read-only State"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{readOnly:!0,initialPhoneNumber:"5551234567",placeholder:"Read-only input"})]})}),(0,jsx_runtime.jsx)(Grid.A,{children:(0,jsx_runtime.jsxs)(Paper.A,{sx:{p:2},children:[(0,jsx_runtime.jsx)(Typography.A,{variant:"subtitle2",gutterBottom:!0,children:"Formatted Number"}),(0,jsx_runtime.jsx)(Components_PhoneInputT1,{formatPhoneNumber:!0,initialPhoneNumber:"5551234567",placeholder:"Formatted input"})]})})]})]}),parameters:{docs:{description:{story:"A comprehensive showcase of different variants and configurations available for the PhoneInputT1 component."}}}},__namedExportsOrder=["Default","WithInitialValue","WithError","WithCustomCountries","WithEmojiFlags","CustomStyling","FormattedNumber","WithCountryNames","DisabledState","Interactive","CustomValidation","InFormContext","VariantsShowcase"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    initialRegion: '+52',\n    initialPhoneNumber: '',\n    placeholder: 'Cellphone number',\n    error: false\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'The default phone input with Mexico (+52) selected as the initial country.'\n      }\n    }\n  }\n}",...Default.parameters?.docs?.source},description:{story:"Default implementation of the phone input component.\nShows the component with default settings and Mexico as the initial country.",...Default.parameters?.docs?.description}}},WithInitialValue.parameters={...WithInitialValue.parameters,docs:{...WithInitialValue.parameters?.docs,source:{originalSource:"{\n  args: {\n    initialRegion: '+1',\n    initialPhoneNumber: '8005551234',\n    placeholder: 'Phone number'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Phone input initialized with a US number. Shows how the component handles pre-filled values.'\n      }\n    }\n  }\n}",...WithInitialValue.parameters?.docs?.source},description:{story:"Phone input with a pre-filled number.\nThis example shows how the component appears with an initial value.",...WithInitialValue.parameters?.docs?.description}}},WithError.parameters={...WithError.parameters,docs:{...WithError.parameters?.docs,source:{originalSource:"{\n  args: {\n    initialRegion: '+34',\n    initialPhoneNumber: '123456',\n    placeholder: 'Phone number',\n    error: true,\n    helperText: 'Invalid phone number format'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Shows the phone input in an error state with custom error message.'\n      }\n    }\n  }\n}",...WithError.parameters?.docs?.source},description:{story:"Phone input in error state.\nThis example demonstrates validation feedback.",...WithError.parameters?.docs?.description}}},WithCustomCountries.parameters={...WithCustomCountries.parameters,docs:{...WithCustomCountries.parameters?.docs,source:{originalSource:"{\n  args: {\n    initialRegion: '+44',\n    placeholder: 'Phone number',\n    countries: [{\n      code: 'GB',\n      name: 'United Kingdom',\n      prefix: '+44'\n    }, {\n      code: 'FR',\n      name: 'France',\n      prefix: '+33'\n    }, {\n      code: 'DE',\n      name: 'Germany',\n      prefix: '+49'\n    }, {\n      code: 'IT',\n      name: 'Italy',\n      prefix: '+39'\n    }, {\n      code: 'ES',\n      name: 'Spain',\n      prefix: '+34'\n    }]\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Phone input with a custom list of European countries only.'\n      }\n    }\n  }\n}",...WithCustomCountries.parameters?.docs?.source},description:{story:"Phone input with custom country list.\nThis example demonstrates how to provide a custom set of countries.",...WithCustomCountries.parameters?.docs?.description}}},WithEmojiFlags.parameters={...WithEmojiFlags.parameters,docs:{...WithEmojiFlags.parameters?.docs,source:{originalSource:"{\n  args: {\n    initialRegion: '+52',\n    placeholder: 'Phone number',\n    countries: [{\n      code: 'MX',\n      name: 'Mexico',\n      prefix: '+52',\n      flagEmoji: 'ðŸ‡²ðŸ‡½'\n    }, {\n      code: 'US',\n      name: 'United States',\n      prefix: '+1',\n      flagEmoji: 'ðŸ‡ºðŸ‡¸'\n    }, {\n      code: 'ES',\n      name: 'Spain',\n      prefix: '+34',\n      flagEmoji: 'ðŸ‡ªðŸ‡¸'\n    }, {\n      code: 'CA',\n      name: 'Canada',\n      prefix: '+1',\n      flagEmoji: 'ðŸ‡¨ðŸ‡¦'\n    }, {\n      code: 'BR',\n      name: 'Brazil',\n      prefix: '+55',\n      flagEmoji: 'ðŸ‡§ðŸ‡·'\n    }]\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Phone input using emoji flags instead of the flag image library.'\n      }\n    }\n  }\n}",...WithEmojiFlags.parameters?.docs?.source},description:{story:"Phone input with emoji flags instead of flag images.\nUseful when you don't want to depend on the flag library.",...WithEmojiFlags.parameters?.docs?.description}}},CustomStyling.parameters={...CustomStyling.parameters,docs:{...CustomStyling.parameters?.docs,source:{originalSource:"{\n  args: {\n    initialRegion: '+52',\n    placeholder: 'Enter your number',\n    label: 'Phone Number',\n    borderRadius: '8px',\n    borderColor: '#9c27b0',\n    focusBorderColor: '#2196f3',\n    size: 'small',\n    required: true,\n    clearable: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstrates custom styling options including border colors, radius, and size.'\n      }\n    }\n  }\n}",...CustomStyling.parameters?.docs?.source},description:{story:"Phone input with custom styling.\nDemonstrates how to customize the appearance of the component.",...CustomStyling.parameters?.docs?.description}}},FormattedNumber.parameters={...FormattedNumber.parameters,docs:{...FormattedNumber.parameters?.docs,source:{originalSource:"{\n  args: {\n    initialRegion: '+1',\n    placeholder: 'Phone will be formatted',\n    formatPhoneNumber: true,\n    label: 'US Phone Format'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Phone input that formats numbers according to country standards (e.g., (XXX) XXX-XXXX for US).'\n      }\n    }\n  }\n}",...FormattedNumber.parameters?.docs?.source},description:{story:"Phone input with formatted number display.\nShows how numbers can be automatically formatted according to country standards.",...FormattedNumber.parameters?.docs?.description}}},WithCountryNames.parameters={...WithCountryNames.parameters,docs:{...WithCountryNames.parameters?.docs,source:{originalSource:"{\n  args: {\n    initialRegion: '+49',\n    placeholder: 'Phone number',\n    showCountryName: true\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Displays country names alongside flags and prefixes in the dropdown and selected value.'\n      }\n    }\n  }\n}",...WithCountryNames.parameters?.docs?.source},description:{story:"Phone input with country names displayed.\nShows how to display country names alongside flags and prefixes.",...WithCountryNames.parameters?.docs?.description}}},DisabledState.parameters={...DisabledState.parameters,docs:{...DisabledState.parameters?.docs,source:{originalSource:"{\n  args: {\n    initialRegion: '+44',\n    initialPhoneNumber: '2074567890',\n    disabled: true,\n    label: 'Contact Phone (Disabled)'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Shows how the component appears when disabled, with a pre-filled value.'\n      }\n    }\n  }\n}",...DisabledState.parameters?.docs?.source},description:{story:"Disabled phone input.\nShows the appearance and behavior of the component when disabled.",...DisabledState.parameters?.docs?.description}}},Interactive.parameters={...Interactive.parameters,docs:{...Interactive.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const [phoneData, setPhoneData] = useState({\n      prefix: '+52',\n      number: '',\n      isValid: true,\n      formatted: ''\n    });\n    const handlePhoneChange = (prefix: string, number: string, isValid: boolean, formatted?: string) => {\n      setPhoneData({\n        prefix,\n        number,\n        isValid,\n        formatted: formatted || number\n      });\n    };\n    return <Stack spacing={3} sx={{\n      width: '400px',\n      p: 2\n    }}>\n        <PhoneInputT1 initialRegion={phoneData.prefix} initialPhoneNumber={phoneData.number} onChange={handlePhoneChange} error={phoneData.number.length > 0 && !phoneData.isValid} helperText=\"Phone number must be 10 digits\" label=\"Phone Number\" required formatPhoneNumber clearable />\n        \n        <Box sx={{\n        mt: 2,\n        p: 2,\n        border: '1px solid #eee',\n        borderRadius: '8px'\n      }}>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            Current Value\n          </Typography>\n          <Typography variant=\"body2\">\n            Country code: <strong>{phoneData.prefix}</strong>\n          </Typography>\n          <Typography variant=\"body2\">\n            Phone number: <strong>{phoneData.number}</strong>\n          </Typography>\n          <Typography variant=\"body2\">\n            Formatted number: <strong>{phoneData.formatted}</strong>\n          </Typography>\n          <Typography variant=\"body2\">\n            Complete number: <strong>{phoneData.prefix + phoneData.number}</strong>\n          </Typography>\n          <Typography variant=\"body2\" sx={{\n          color: phoneData.isValid ? 'success.main' : 'error.main'\n        }}>\n            Status: <strong>{phoneData.isValid ? 'Valid' : 'Invalid'}</strong>\n          </Typography>\n        </Box>\n      </Stack>;\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'A fully interactive example with real-time validation, formatting, and tracking of the complete phone number.'\n      }\n    }\n  }\n}",...Interactive.parameters?.docs?.source},description:{story:"Interactive phone input example that demonstrates real-time validation,\nformatting, and tracking the complete phone number with country code.",...Interactive.parameters?.docs?.description}}},CustomValidation.parameters={...CustomValidation.parameters,docs:{...CustomValidation.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const [phoneData, setPhoneData] = useState({\n      prefix: '+1',\n      number: '',\n      isValid: true\n    });\n\n    // Custom validation function: US area codes can't start with 0 or 1\n    const validateUSNumber = (number: string): boolean => {\n      if (phoneData.prefix !== '+1') return number.length === 10;\n      if (number.length !== 10) return false;\n      const areaCode = number.substring(0, 3);\n      return areaCode.charAt(0) !== '0' && areaCode.charAt(0) !== '1';\n    };\n    const handlePhoneChange = (prefix: string, number: string, isValid: boolean) => {\n      setPhoneData({\n        prefix,\n        number,\n        isValid: validateUSNumber(number)\n      });\n    };\n    return <Stack spacing={3} sx={{\n      width: '400px',\n      p: 2\n    }}>\n        <Typography variant=\"subtitle1\" gutterBottom>\n          US Number Validation Rules:\n        </Typography>\n        <Typography variant=\"body2\">\n          â€¢ Must be 10 digits long\n        </Typography>\n        <Typography variant=\"body2\">\n          â€¢ Area code cannot start with 0 or 1\n        </Typography>\n        \n        <PhoneInputT1 initialRegion=\"+1\" onChange={handlePhoneChange} error={phoneData.number.length > 0 && !phoneData.isValid} helperText=\"Invalid US number (area code can't start with 0 or 1)\" label=\"US Phone Number\" customValidation={validateUSNumber} countries={[{\n        code: 'US',\n        name: 'United States',\n        prefix: '+1'\n      }, {\n        code: 'CA',\n        name: 'Canada',\n        prefix: '+1'\n      }]} />\n        \n        <Box sx={{\n        mt: 2,\n        p: 2,\n        border: '1px solid #eee',\n        borderRadius: '8px'\n      }}>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            Validation status: \n            <Box component=\"span\" sx={{\n            ml: 1,\n            px: 1.5,\n            py: 0.5,\n            borderRadius: '4px',\n            bgcolor: phoneData.isValid ? 'success.light' : 'error.light',\n            color: phoneData.isValid ? 'success.dark' : 'error.dark',\n            fontSize: '0.75rem',\n            fontWeight: 'bold'\n          }}>\n              {phoneData.isValid ? 'VALID' : 'INVALID'}\n            </Box>\n          </Typography>\n          <Typography variant=\"body2\" mt={1}>\n            Current number: <strong>{phoneData.prefix} {phoneData.number}</strong>\n          </Typography>\n        </Box>\n      </Stack>;\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstrates how to implement custom validation rules for phone numbers.'\n      }\n    }\n  }\n}",...CustomValidation.parameters?.docs?.source},description:{story:"Custom validation example.\nDemonstrates how to implement custom validation rules.",...CustomValidation.parameters?.docs?.description}}},InFormContext.parameters={...InFormContext.parameters,docs:{...InFormContext.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    return <Box component=\"form\" sx={{\n      width: '650px',\n      p: 3,\n      border: '1px solid #e0e0e0',\n      borderRadius: '8px',\n      backgroundColor: '#f9f9f9'\n    }} onSubmit={e => {\n      e.preventDefault();\n      alert('Form submitted!');\n    }}>\n        <Typography variant=\"h5\" gutterBottom>\n          Contact Information Form\n        </Typography>\n        <Divider sx={{\n        mb: 3\n      }} />\n        \n        <Grid container spacing={3}>\n          <Grid>\n            <Typography variant=\"body2\" gutterBottom>\n              Name\n            </Typography>\n            <Box component=\"input\" sx={{\n            width: '100%',\n            p: 1.5,\n            border: '1px solid #c4c4c4',\n            borderRadius: '15px',\n            fontSize: '16px'\n          }} placeholder=\"Enter your name\" />\n          </Grid>\n          \n          <Grid>\n            <Typography variant=\"body2\" gutterBottom>\n              Email\n            </Typography>\n            <Box component=\"input\" type=\"email\" sx={{\n            width: '100%',\n            p: 1.5,\n            border: '1px solid #c4c4c4',\n            borderRadius: '15px',\n            fontSize: '16px'\n          }} placeholder=\"Enter your email\" />\n          </Grid>\n          \n          <Grid>\n            <Typography variant=\"body2\" gutterBottom>\n              Mobile Phone (Required)\n            </Typography>\n            <PhoneInputT1 initialRegion=\"+52\" placeholder=\"Mobile phone number\" required clearable formatPhoneNumber />\n          </Grid>\n          \n          <Grid>\n            <Typography variant=\"body2\" gutterBottom>\n              Work Phone (Optional)\n            </Typography>\n            <PhoneInputT1 initialRegion=\"+1\" placeholder=\"Work phone number (optional)\" showCountryName borderRadius=\"8px\" />\n          </Grid>\n          \n          <Grid>\n            <Typography variant=\"body2\" gutterBottom>\n              Address\n            </Typography>\n            <Box component=\"textarea\" sx={{\n            width: '100%',\n            p: 1.5,\n            border: '1px solid #c4c4c4',\n            borderRadius: '15px',\n            fontSize: '16px',\n            fontFamily: 'inherit',\n            resize: 'vertical',\n            minHeight: '80px'\n          }} placeholder=\"Enter your address\" />\n          </Grid>\n          \n          <Grid>\n            <Box sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            mt: 2\n          }}>\n              <Box component=\"button\" type=\"button\" sx={{\n              bgcolor: 'transparent',\n              color: '#555',\n              py: 1.5,\n              px: 4,\n              border: '1px solid #ccc',\n              borderRadius: '8px',\n              fontSize: '16px',\n              cursor: 'pointer',\n              mr: 2\n            }}>\n                Cancel\n              </Box>\n              <Box component=\"button\" type=\"submit\" sx={{\n              bgcolor: '#E84142',\n              color: 'white',\n              py: 1.5,\n              px: 4,\n              border: 'none',\n              borderRadius: '8px',\n              fontSize: '16px',\n              cursor: 'pointer',\n              '&:hover': {\n                bgcolor: '#d33a3b'\n              }\n            }}>\n                Submit\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>;\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstrates how different configurations of the phone input can be used within a form context.'\n      }\n    }\n  }\n}",...InFormContext.parameters?.docs?.source},description:{story:"Phone input in a form context.\nShows multiple variations of the component inside a form.",...InFormContext.parameters?.docs?.description}}},VariantsShowcase.parameters={...VariantsShowcase.parameters,docs:{...VariantsShowcase.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    return <Box sx={{\n      p: 3,\n      width: \'800px\'\n    }}>\n        <Typography variant="h5" gutterBottom>PhoneInputT1 Variants</Typography>\n        <Typography variant="body2" paragraph>\n          A showcase of different configuration options for the PhoneInputT1 component.\n        </Typography>\n        \n        <Grid container spacing={3}>\n          {/* Basic variants */}\n          <Grid>\n            <Paper sx={{\n            p: 2\n          }}>\n              <Typography variant="subtitle2" gutterBottom>Standard</Typography>\n              <PhoneInputT1 placeholder="Standard input" />\n            </Paper>\n          </Grid>\n          \n          <Grid>\n            <Paper sx={{\n            p: 2\n          }}>\n              <Typography variant="subtitle2" gutterBottom>With Label</Typography>\n              <PhoneInputT1 label="Phone Number" placeholder="With label" />\n            </Paper>\n          </Grid>\n          \n          <Grid>\n            <Paper sx={{\n            p: 2\n          }}>\n              <Typography variant="subtitle2" gutterBottom>Small Size</Typography>\n              <PhoneInputT1 size="small" placeholder="Small size input" />\n            </Paper>\n          </Grid>\n          \n          <Grid>\n            <Paper sx={{\n            p: 2\n          }}>\n              <Typography variant="subtitle2" gutterBottom>Required Field</Typography>\n              <PhoneInputT1 label="Required Phone" required placeholder="Required field" />\n            </Paper>\n          </Grid>\n          \n          {/* Style variants */}\n          <Grid>\n            <Paper sx={{\n            p: 2\n          }}>\n              <Typography variant="subtitle2" gutterBottom>Custom Border Radius</Typography>\n              <PhoneInputT1 borderRadius="4px" placeholder="Square corners" />\n            </Paper>\n          </Grid>\n          \n          <Grid>\n            <Paper sx={{\n            p: 2\n          }}>\n              <Typography variant="subtitle2" gutterBottom>Custom Colors</Typography>\n              <PhoneInputT1 borderColor="#9c27b0" focusBorderColor="#2196f3" placeholder="Custom colors" />\n            </Paper>\n          </Grid>\n          \n          <Grid>\n            <Paper sx={{\n            p: 2\n          }}>\n              <Typography variant="subtitle2" gutterBottom>With Country Names</Typography>\n              <PhoneInputT1 showCountryName placeholder="Shows country names" />\n            </Paper>\n          </Grid>\n          \n          <Grid>\n            <Paper sx={{\n            p: 2\n          }}>\n              <Typography variant="subtitle2" gutterBottom>Clearable Input</Typography>\n              <PhoneInputT1 clearable initialPhoneNumber="5551234567" placeholder="Clearable input" />\n            </Paper>\n          </Grid>\n          \n          {/* State variants */}\n          <Grid>\n            <Paper sx={{\n            p: 2\n          }}>\n              <Typography variant="subtitle2" gutterBottom>Error State</Typography>\n              <PhoneInputT1 error helperText="Invalid phone number" placeholder="Error state" />\n            </Paper>\n          </Grid>\n          \n          <Grid>\n            <Paper sx={{\n            p: 2\n          }}>\n              <Typography variant="subtitle2" gutterBottom>Disabled State</Typography>\n              <PhoneInputT1 disabled initialPhoneNumber="5551234567" placeholder="Disabled input" />\n            </Paper>\n          </Grid>\n          \n          <Grid>\n            <Paper sx={{\n            p: 2\n          }}>\n              <Typography variant="subtitle2" gutterBottom>Read-only State</Typography>\n              <PhoneInputT1 readOnly initialPhoneNumber="5551234567" placeholder="Read-only input" />\n            </Paper>\n          </Grid>\n          \n          <Grid>\n            <Paper sx={{\n            p: 2\n          }}>\n              <Typography variant="subtitle2" gutterBottom>Formatted Number</Typography>\n              <PhoneInputT1 formatPhoneNumber initialPhoneNumber="5551234567" placeholder="Formatted input" />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Box>;\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: \'A comprehensive showcase of different variants and configurations available for the PhoneInputT1 component.\'\n      }\n    }\n  }\n}',...VariantsShowcase.parameters?.docs?.source},description:{story:"All variants showcase.\nA grid of different phone input configurations to compare appearances.",...VariantsShowcase.parameters?.docs?.description}}};try{Default.displayName="Default",Default.__docgenInfo={description:"Default implementation of the phone input component.\nShows the component with default settings and Mexico as the initial country.",displayName:"Default",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#Default"]={docgenInfo:Default.__docgenInfo,name:"Default",path:"src/stories/Components/PhoneInputT1.stories.tsx#Default"})}catch(__react_docgen_typescript_loader_error){}try{WithInitialValue.displayName="WithInitialValue",WithInitialValue.__docgenInfo={description:"Phone input with a pre-filled number.\nThis example shows how the component appears with an initial value.",displayName:"WithInitialValue",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#WithInitialValue"]={docgenInfo:WithInitialValue.__docgenInfo,name:"WithInitialValue",path:"src/stories/Components/PhoneInputT1.stories.tsx#WithInitialValue"})}catch(__react_docgen_typescript_loader_error){}try{WithError.displayName="WithError",WithError.__docgenInfo={description:"Phone input in error state.\nThis example demonstrates validation feedback.",displayName:"WithError",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#WithError"]={docgenInfo:WithError.__docgenInfo,name:"WithError",path:"src/stories/Components/PhoneInputT1.stories.tsx#WithError"})}catch(__react_docgen_typescript_loader_error){}try{WithCustomCountries.displayName="WithCustomCountries",WithCustomCountries.__docgenInfo={description:"Phone input with custom country list.\nThis example demonstrates how to provide a custom set of countries.",displayName:"WithCustomCountries",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#WithCustomCountries"]={docgenInfo:WithCustomCountries.__docgenInfo,name:"WithCustomCountries",path:"src/stories/Components/PhoneInputT1.stories.tsx#WithCustomCountries"})}catch(__react_docgen_typescript_loader_error){}try{WithEmojiFlags.displayName="WithEmojiFlags",WithEmojiFlags.__docgenInfo={description:"Phone input with emoji flags instead of flag images.\nUseful when you don't want to depend on the flag library.",displayName:"WithEmojiFlags",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#WithEmojiFlags"]={docgenInfo:WithEmojiFlags.__docgenInfo,name:"WithEmojiFlags",path:"src/stories/Components/PhoneInputT1.stories.tsx#WithEmojiFlags"})}catch(__react_docgen_typescript_loader_error){}try{CustomStyling.displayName="CustomStyling",CustomStyling.__docgenInfo={description:"Phone input with custom styling.\nDemonstrates how to customize the appearance of the component.",displayName:"CustomStyling",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#CustomStyling"]={docgenInfo:CustomStyling.__docgenInfo,name:"CustomStyling",path:"src/stories/Components/PhoneInputT1.stories.tsx#CustomStyling"})}catch(__react_docgen_typescript_loader_error){}try{FormattedNumber.displayName="FormattedNumber",FormattedNumber.__docgenInfo={description:"Phone input with formatted number display.\nShows how numbers can be automatically formatted according to country standards.",displayName:"FormattedNumber",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#FormattedNumber"]={docgenInfo:FormattedNumber.__docgenInfo,name:"FormattedNumber",path:"src/stories/Components/PhoneInputT1.stories.tsx#FormattedNumber"})}catch(__react_docgen_typescript_loader_error){}try{WithCountryNames.displayName="WithCountryNames",WithCountryNames.__docgenInfo={description:"Phone input with country names displayed.\nShows how to display country names alongside flags and prefixes.",displayName:"WithCountryNames",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#WithCountryNames"]={docgenInfo:WithCountryNames.__docgenInfo,name:"WithCountryNames",path:"src/stories/Components/PhoneInputT1.stories.tsx#WithCountryNames"})}catch(__react_docgen_typescript_loader_error){}try{DisabledState.displayName="DisabledState",DisabledState.__docgenInfo={description:"Disabled phone input.\nShows the appearance and behavior of the component when disabled.",displayName:"DisabledState",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#DisabledState"]={docgenInfo:DisabledState.__docgenInfo,name:"DisabledState",path:"src/stories/Components/PhoneInputT1.stories.tsx#DisabledState"})}catch(__react_docgen_typescript_loader_error){}try{Interactive.displayName="Interactive",Interactive.__docgenInfo={description:"Interactive phone input example that demonstrates real-time validation,\nformatting, and tracking the complete phone number with country code.",displayName:"Interactive",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#Interactive"]={docgenInfo:Interactive.__docgenInfo,name:"Interactive",path:"src/stories/Components/PhoneInputT1.stories.tsx#Interactive"})}catch(__react_docgen_typescript_loader_error){}try{CustomValidation.displayName="CustomValidation",CustomValidation.__docgenInfo={description:"Custom validation example.\nDemonstrates how to implement custom validation rules.",displayName:"CustomValidation",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#CustomValidation"]={docgenInfo:CustomValidation.__docgenInfo,name:"CustomValidation",path:"src/stories/Components/PhoneInputT1.stories.tsx#CustomValidation"})}catch(__react_docgen_typescript_loader_error){}try{InFormContext.displayName="InFormContext",InFormContext.__docgenInfo={description:"Phone input in a form context.\nShows multiple variations of the component inside a form.",displayName:"InFormContext",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#InFormContext"]={docgenInfo:InFormContext.__docgenInfo,name:"InFormContext",path:"src/stories/Components/PhoneInputT1.stories.tsx#InFormContext"})}catch(__react_docgen_typescript_loader_error){}try{VariantsShowcase.displayName="VariantsShowcase",VariantsShowcase.__docgenInfo={description:"All variants showcase.\nA grid of different phone input configurations to compare appearances.",displayName:"VariantsShowcase",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/Components/PhoneInputT1.stories.tsx#VariantsShowcase"]={docgenInfo:VariantsShowcase.__docgenInfo,name:"VariantsShowcase",path:"src/stories/Components/PhoneInputT1.stories.tsx#VariantsShowcase"})}catch(__react_docgen_typescript_loader_error){}}}]);